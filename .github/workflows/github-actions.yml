name: Application CI
on: [push]
jobs:
    pipeline:
        name: jhipsterSampleApplication pipeline
        runs-on: ubuntu-latest
        timeout-minutes: 40
        env:
            NODE_VERSION: 14.17.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/setup-python@v2
              with:
                python-version: '3.10'
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install pandas
                pip install numpy
            - run: sudo apt update
            - run: sudo apt install inotify-tools
            - run: inotifywait -mr /home/runner/work/jhipster-sample-app/jhipster-sample-app/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
            - run: touch starting_pipeline_uses-checkout_16
            - run: rm starting_pipeline_uses-checkout_16
            - uses: actions/checkout@v2
            - run: touch starting_pipeline_uses-setup-node_17
            - run: rm starting_pipeline_uses-setup-node_17
            - uses: actions/setup-node@v1
              with:
                  node-version: 14.17.1
            - run: touch starting_pipeline_uses-setup-java_20
            - run: rm starting_pipeline_uses-setup-java_20
            - uses: actions/setup-java@v2
              with:
                  distribution: 'adopt'
                  java-version: '11.x'
            - run: touch starting_pipeline_Installnodejspackages_24
            - run: rm starting_pipeline_Installnodejspackages_24
            - name: Install node.js packages
              run: npm install
            - run: touch starting_pipeline_Runbackendtest_26
            - run: rm starting_pipeline_Runbackendtest_26
            - name: Run backend test
              run: |
                  chmod +x mvnw
                  npm run ci:backend:test
            - run: touch starting_pipeline_Runfrontendtest_30
            - run: rm starting_pipeline_Runfrontendtest_30
            - name: Run frontend test
              run: npm run ci:frontend:test
            - run: touch starting_pipeline_Packageapplication_32
            - run: rm starting_pipeline_Packageapplication_32
            - name: Package application
              run: npm run java:jar:prod
            - run: touch starting_pipeline_E2E_34
            - run: rm starting_pipeline_E2E_34
            - name: 'E2E: Package'
              run: npm run ci:e2e:package
            - run: touch starting_pipeline_E2E_36
            - run: rm starting_pipeline_E2E_36
            - name: 'E2E: Prepare'
              run: npm run ci:e2e:prepare
            - run: touch starting_pipeline_E2E_38
            - run: rm starting_pipeline_E2E_38
            - name: 'E2E: Run'
              run: npm run ci:e2e:run
            - run: touch starting_pipeline_E2E_40
            - run: rm starting_pipeline_E2E_40
            - name: 'E2E: Teardown'
              run: npm run ci:e2e:teardown
            - run: touch starting_finished_finished_8979874
              if: always()
            - run: rm starting_finished_finished_8979874
              if: always()
            - name: rat check
              if: always()
              run: |
                 if [ -f /home/runner/work/jhipster-sample-app/jhipster-sample-app/target/rat.txt ]; then cat /home/runner/work/jhipster-sample-app/jhipster-sample-app/target/rat.txt; fi
            - name: Check script file exists and execute
              if: always()
              run: |
                [ -f .github/workflows/script.py ] && python .github/workflows/script.py
                [ -f /home/runner/work/jhipster-sample-app/jhipster-sample-app/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/jhipster-sample-app/jhipster-sample-app/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},jhipster-sample-app,${GITHUB_WORKFLOW}" > /home/runner/work/jhipster-sample-app/jhipster-sample-app/optimizing-ci-builds-ci-analysis/job.csv
            - name: Checkout to destination CI-analyzes repo
              uses: actions/checkout@v3
              if: always()
              with:
                path: jhipster-sample-app
                ref: '1686925443-548a464'
                repository: 'UT-SE-Research/ci-analyzes'
                token: '${{ secrets.API_TOKEN_GITHUB }}'
                persist-credentials: true
            - name: Copy files to push to another directory
              if: always()
              run: |
                mkdir -p jhipster-sample-app/jhipster-sample-app/.github/workflows/github-actions/pipeline
                cp -rvT optimizing-ci-builds-ci-analysis jhipster-sample-app/jhipster-sample-app/.github/workflows/github-actions/pipeline
            - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1686925443-548a464/jhipster-sample-app/.github/workflows/github-actions/pipeline
            - name: Pushes analysis to another repository
              if: always()
              working-directory: jhipster-sample-app
              run: |
                commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
                git config --global user.name 'UT-SE-Research'
                git config --global user.email '${{ secrets.EMAIL }}'
                git add .
                git commit -m $commit_message
                while ! git push origin 1686925443-548a464; do
                  git pull --rebase origin 1686925443-548a464
                  sleep $((RANDOM % 5 + 1))
                done
